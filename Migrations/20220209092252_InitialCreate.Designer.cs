// <auto-generated />
using Issuer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace vc_issuer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220209092252_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("Issuer.Models.Authorization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int>("OperationID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientID");

                    b.HasIndex("OperationID");

                    b.ToTable("authorization");
                });

            modelBuilder.Entity("Issuer.Models.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("ClientSecret")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Issuer.Models.Endpoint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("URI")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("endpoint");
                });

            modelBuilder.Entity("Issuer.Models.Operation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ResourceID")
                        .HasColumnType("int");

                    b.Property<string>("URI")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ResourceID");

                    b.ToTable("operation");
                });

            modelBuilder.Entity("Issuer.Models.Resource", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EndpointID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("URI")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("EndpointID");

                    b.ToTable("resource");
                });

            modelBuilder.Entity("Issuer.Models.Authorization", b =>
                {
                    b.HasOne("Issuer.Models.Client", "Client")
                        .WithMany("Authorizations")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Issuer.Models.Operation", "Operation")
                        .WithMany("Authorizations")
                        .HasForeignKey("OperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Issuer.Models.Operation", b =>
                {
                    b.HasOne("Issuer.Models.Resource", "Resource")
                        .WithMany("Operations")
                        .HasForeignKey("ResourceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Issuer.Models.Resource", b =>
                {
                    b.HasOne("Issuer.Models.Endpoint", "Endpoint")
                        .WithMany("Resources")
                        .HasForeignKey("EndpointID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");
                });

            modelBuilder.Entity("Issuer.Models.Client", b =>
                {
                    b.Navigation("Authorizations");
                });

            modelBuilder.Entity("Issuer.Models.Endpoint", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("Issuer.Models.Operation", b =>
                {
                    b.Navigation("Authorizations");
                });

            modelBuilder.Entity("Issuer.Models.Resource", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
